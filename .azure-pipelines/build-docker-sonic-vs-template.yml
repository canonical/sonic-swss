parameters:
- name: arch
  type: string
  values:
  - amd64
  - armhf
  - arm64
  default: amd64

- name: timeout
  type: number
  default: 60

- name: swss_artifact_name
  type: string

- name: docker_sonic_base_artifact
  type: string

- name: artifact_name
  type: string

jobs:
- job:
  displayName: ${{ parameters.arch }}
  timeoutInMinutes: ${{ parameters.timeout }}

  pool:
    vmImage: 'ubuntu-20.04'

  steps:

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.swss_artifact_name }}
    displayName: "Download sonic swss artifact"

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.docker_sonic_base_artifact }}
    displayName: "Download base docker VS image"

  - script: |
      echo $(Build.DefinitionName).$(Build.BuildNumber)

      docker load < ../docker-sonic-vs.gz

      mkdir -p .azure-pipelines/docker-sonic-vs/debs

      cp -v ../*.deb .azure-pipelines/docker-sonic-vs/debs

      pushd .azure-pipelines

      docker build --no-cache -t docker-sonic-vs:$(Build.DefinitionName).$(Build.BuildNumber) docker-sonic-vs

      popd

      docker save docker-sonic-vs:$(Build.DefinitionName).$(Build.BuildNumber) | gzip -c > $(Build.ArtifactStagingDirectory)/docker-sonic-vs.gz

  - publish: $(Build.ArtifactStagingDirectory)/
    artifact: ${{ parameters.artifact_name }}
    displayName: "Archive sonic docker vs image"
