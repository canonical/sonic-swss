parameters:
- name: arch
  type: string
  values:
  - amd64
  default: amd64

- name: pool
  type: string
  values:
  - sonicbld
  - default
  default: default

- name: timeout
  type: number
  default: 60

- name: sonic_slave
  type: string

- name: sairedis_artifact_name
  type: string

- name: swss_common_artifact_name
  type: string

- name: swss_artifact_name
  type: string

- name: artifact_name
  type: string

- name: archive_pytests
  type: boolean
  default: false

jobs:
- job:
  displayName: ${{ parameters.arch }}
  timeoutInMinutes: ${{ parameters.timeout }}

  pool:
    ${{ if ne(parameters.pool, 'default') }}:
      name: ${{ parameters.pool }}
    ${{ if eq(parameters.pool, 'default') }}:
      vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/${{ parameters.sonic_slave }}:latest

  steps:
  - script: |
      sudo apt-get install -y lcov
    displayName: "Install dependencies"
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.artifact_name }}
    displayName: "Download gcov artifact"
  - script: |
      set -x
      ls -lh
      sudo cp -rf sonic-gcov $(Build.ArtifactStagingDirectory)
      ls -lh
    workingDirectory: $(Pipeline.Workspace)
    displayName: "store sonic-gcov"
  - checkout: self
    submodules: true
  - script: |
      set -x

      sudo tar -zcvf swss.tar.gz ./*

      sudo cp -rf $(Build.ArtifactStagingDirectory)/sonic-gcov ./
      sudo cp swss.tar.gz sonic-gcov/
      pushd sonic-gcov
      ls -lh
      sudo chmod +x gcov_support.sh
      sudo ./gcov_support.sh generate
      sudo ./gcov_support.sh merge_container_info
      sudo cp -rf gcov_output $(Build.ArtifactStagingDirectory)
      ls -lh $(Build.ArtifactStagingDirectory)
      popd
    workingDirectory: $(Pipeline.Workspace)
    displayName: "generate gcov reports"

  - publish: $(Build.ArtifactStagingDirectory)/gcov_output
    artifact: gcov_info
    displayName: "Archive gcov info"
    condition: always()
  